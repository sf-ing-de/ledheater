/*
 * Copyright (c) 2014-2018 Cesanta Software Limited
 * All rights reserved
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "mgos.h"
#include "mgos_pwm.h"
#include "mgos_http_server.h"

static struct mg_serve_http_opts s_http_server_opts;


static int is_websocket(const struct mg_connection *nc) {
  return nc->flags & MG_F_IS_WEBSOCKET;
}

static void foo_handler(struct mg_connection *c, int ev, void *p, void *user_data) {
  (void) p;
  switch (ev) {
    case MG_EV_WEBSOCKET_HANDSHAKE_DONE: {
      /* New websocket connection. Tell everybody. */
      //broadcast(nc, mg_mk_str("++ joined"));
      LOG(LL_INFO, ("MG_EV_WEBSOCKET_HANDSHAKE_DONE"));
      break;
    }
    case MG_EV_WEBSOCKET_FRAME: {
      LOG(LL_INFO, ("MG_EV_WEBSOCKET_FRAME"));
      break;
    }
    case MG_EV_HTTP_REQUEST: {
      mg_serve_http(c, (struct http_message *) p, s_http_server_opts);
      c->flags |= (MG_F_SEND_AND_CLOSE);
      (void) user_data;
      LOG(LL_INFO, ("MG_EV_HTTP_REQUEST"));
      break;
    }
    case MG_EV_CLOSE: {
      /* Disconnect. Tell everybody. */
      if (is_websocket(c)) {
        //broadcast(nc, mg_mk_str("-- left"));
      }
      LOG(LL_INFO, ("MG_EV_CLOSE"));
      break;
    }
  }
}

enum mgos_app_init_result mgos_app_init(void) {
  mgos_pwm_set(12, 10, 0);
  mgos_pwm_set(13, 10, 0);
  mgos_pwm_set(15, 10, 0);
  mgos_pwm_set(0, 10, 0);
  mgos_pwm_set(4, 10, 0);
  mgos_pwm_set(5, 10, 0);

  s_http_server_opts.document_root = ".";  // Serve current directory
  s_http_server_opts.enable_directory_listing = "yes";
  mgos_register_http_endpoint("/", foo_handler, NULL);
  printf("Hello World!\n");
  return MGOS_APP_INIT_SUCCESS;
}
